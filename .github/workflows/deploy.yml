name: Deploy to AWS Elastic Beanstalk server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Adjust based on your project's requirements

    #   - name: Cache Node.js modules (Increase cache invalidation if needed)
    #     uses: actions/cache@v4
    #     with:
    #       path: ~/.npm
    #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #       restore-keys: |
    #         ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci  # Use npm ci for a deterministic installation

      - name: Build project
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |
          npm run build  # Assuming this creates the "dist" folder

      - name: Create Deployment Archive (app.zip)
        run: |
            cd dist  # Assuming build output is in the "dist" folder
            zip -r ../app.zip . --exclude "node_modules/**" --exclude ".env" --exclude ".git*"
    

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  
  
      - name: Install EB CLI
        run: |
          pip install --upgrade awsebcli
          eb --version

      - name: Upload Application to S3 
        env:  # Use environment variables for AWS credentials
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
        run: |
          aws s3 cp app.zip s3://${{ secrets.AWS_S3_BUCKET }}/project-path/

      - name: Deploy Application Version (Modify if using S3 upload)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          eb init
          eb use Stage-ott-env-1
          eb deploy ${{ github.sha }}
